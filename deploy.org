#+PROPERTY: results silent

* prereqs
  - set remote host + auto-confirm
  #+NAME: setup
  #+BEGIN_SRC emacs-lisp 
    (setq su/provorg/host "chaos"
          org-confirm-babel-evaluate nil)
  #+END_SRC

  - ensure that vagrant is up and running
  #+CALL: vagrant[:async no ]("up")

* local
  #+NAME: blog/push
  #+BEGIN_SRC sh 
    git push
    git rev-parse HEAD
  #+END_SRC
* vagrant
  - pull latest code. hmm checkout specific branches/commits? would need to pass
    [[http://orgmode.org/worg/org-contrib/babel/intro.html#arguments-to-source-code-blocks][arguments to code blocks]]
  - build it
  - compress using upx + copy them over to shared folder
  #+NAME: blog/make(commit = blog/push)
  #+BEGIN_SRC sh :dir /ssh:vagrant:~ 
    bash -i - 1> /dev/null <<EOF
    workon blog
    git fetch --all && git reset --hard "$commit"
    make deploy
    EOF
  #+END_SRC
* local
  scp files over to chaos
  #+NAME: blog/scp 
  #+BEGIN_SRC sh :dir ~/workspace/linode/ :var host=provorg/get-host :var server_dir=blog/server-dir 
    tar czf - . | ssh $host "cd $server_dir/.hsenv/bin; tar xzf -"
    echo "pushed to $host!"
  #+END_SRC
* chaos
  #+NAME: blog/server-dir
  #+BEGIN_SRC sh :dir-dyn yes :dir ~ :cache yes :results replace 
    bash -i - <<EOF
    workon blog 1> /dev/null
    printenv VIRTUAL_ENV # for some reason echo doesn't work here
    EOF
  #+END_SRC

  #+CALL: provorg/initd(app="blog",action="stop")

  #+NAME: blog/install(commit = blog/push) 
  #+BEGIN_SRC sh :dir /ssh:chaos:~
    bash -i - <<EOF
    workon blog 1> /dev/null
    git fetch --all && git reset --hard "$commit"
    make install # decompress + copy files
    EOF
  #+END_SRC

  #+CALL: provorg/initd(app="blog",action="start")
* postreqs
  #+NAME: cleanup
  #+BEGIN_SRC emacs-lisp 
    (setq su/provorg/host "localhost"
          org-confirm-babel-evaluate t)
  #+END_SRC
